name: tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - test

jobs:
  test-report:

      runs-on: ubuntu-latest

      services:
        docker:
          image: docker:19.03.12
          options: --privileged

      steps:
        - name: Checkout the repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Set up Docker
          uses: docker/setup-buildx-action@v2

        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'oracle'

        - name: Install Docker Compose
          run: |
            curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" \
            -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose

        - name: Setup Git for pushing
          run: |
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

        - name: Switch to gh-pages branch
          run: |
            git fetch origin gh-pages:gh-pages
            git checkout gh-pages

        - name: Merge changes from main into gh-pages
          run: |
            git merge origin/main --strategy-option theirs || {
            echo "Merge conflict detected, force resolving conflicts by resetting branch to origin/main";
            git reset --hard origin/main
            }

        - name: Push changes to gh-pages with force
          run: git push --force origin gh-pages

        - name: Set up properties file
          run: printf "%s" "${{ secrets.PROPERTIES }}" > src/main/java/com/core/utils/configuration.properties

        - name: Grant execute permission for Gradle wrapper
          run: chmod +x gradlew

        - name: Start Selenoid
          run: ./gradlew runSelenoid

        - name: Run tests Selenoid
          run: ./gradlew clean selenoid

        - name: Tear down Selenoid
          run: ./gradlew killSelenoid

        - name: Copy Gradle Test Reports
          if: always()
          run: |
            chmod +x .github/workflows/filter_and_copy.sh
            ./.github/workflows/filter_and_copy.sh

        - name: Deploy Report to GitHub Pages
          if: always()
          uses: peaceiris/actions-gh-pages@v4
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_dir: .github/workflows/reports
            publish_branch: gh-pages

        - name: Merge changes to main if tests passed
          if: success()
          run: |
            git checkout main
            git merge gh-pages
            git push origin main
