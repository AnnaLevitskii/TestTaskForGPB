plugins {
    id 'java'
    id 'io.qameta.allure' version '2.9.6'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.18.1'
    implementation group: 'org.testng', name: 'testng', version: '7.4.0'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    implementation 'io.github.bonigarcia:webdrivermanager:5.7.0'
    implementation 'io.rest-assured:rest-assured:5.4.0'

    implementation 'io.qameta.allure:allure-java-commons:2.14.0'
    implementation 'io.qameta.allure:allure-commandline:2.14.0'
    implementation 'io.qameta.allure:allure-rest-assured:2.14.0'
    implementation 'io.qameta.allure:allure-assertj:2.14.0'
    implementation 'io.qameta.allure:allure-testng:2.14.0'

    testImplementation 'org.mock-server:mockserver-netty:5.11.2'
}

test {
    useTestNG(){
        suites 'src/test/resources/api.xml'
    }
}

task smoke(type:Test){
    useTestNG(){
        suites 'src/test/resources/smoke.xml'
    }
}
task selenoid(type:Test){
    useTestNG(){
        suites 'src/test/resources/selenoid.xml'
    }
}
task ui(type:Test){
    useTestNG(){
        suites 'src/test/resources/ui.xml'
    }
    if(project.hasProperty('browser')){
        systemProperty 'browser', "${browser}"
    }
    if(project.hasProperty('screen')){
        systemProperty 'screen', "${screen}"
    }
}
task api(type:Test){
    useTestNG(){
        suites 'src/test/resources/api.xml'
    }
}

tasks.register('copyAllureHistory', Copy) {
    description 'Copies existing allure history to include to be included in the new report'
    from ("allure-report/history") {
        include '**/*.json'
    }
    into "build/allure-results/history"
}

task runAllure() {
    doLast {
        exec {
            commandLine 'gradle', 'copyAllureHistory'
        }
        exec {
            commandLine 'allure', 'generate', 'allure-results', '--clean'
        }
        exec {
            commandLine 'allure', 'serve', 'build/allure-results'
        }
    }
}
task runSelenoid() {
    doLast {
        exec {
            commandLine 'docker', 'pull', 'selenoid/vnc_firefox:125.0'
        }
        exec {
            commandLine 'docker', 'pull', 'selenoid/vnc_chrome:125.0'
        }
        exec {
            commandLine 'docker', 'pull', 'selenoid/video-recorder:latest-release'
        }
        exec {
            commandLine 'docker-compose', 'up', '-d'
        }
    }
}
task killSelenoid() {
    doLast {
        exec {
            commandLine 'docker-compose', 'down', '-v'
        }
    }
}

allureReport.dependsOn(copyAllureHistory)